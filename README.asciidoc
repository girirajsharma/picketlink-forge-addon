== picketlink-forge-addon
:idprefix: id_ 

The picketlink-forge-addon enables security to your project by providing configuration options to quickly setup *Authentication*, 
*Authorization* and *Identity Management* to your project.

PicketLink is an umbrella project for Security and Identity Management for Java Applications and fully integrated with CDI:

- JavaEE Security
- Identity Management
- Support for Federation Protocols such as SAML, oAuth and OpenID.
- Social Authentication
- Token Management and Authentication
- Authorization based on Security Annotations and EL Expressions
- RESTFul and Mobile Security Features

More details on http://picketlink.org[picketlink.org]. 
        
=== Depends on

[options="header"]
|===
|Addon |Exported |Optional

|ui
|no
|no

|projects
|yes
|no

|parser-java
|yes
|no

|javaee
|yes
|no

|configuration
|yes
|no

|maven
|yes
|no

|org.jboss.forge.furnace.container:cdi
|no
|no

|===

== Building Sources and Forge Installation

If you want to use the latest changes for this addon, please clone the https://github.com/picketlink/picketlink-forge-addon/[PicketLink Forge Addon Repository] in GitHub.

        git clone https://github.com/picketlink/picketlink-forge-addon/
        
Once you've successfully cloned the repository, navigate to the newly created directory:

[source,cmd]
        cd picketlink-forge-addon
        
Make sure Forge is properly installed and configured in your environment. If so, you should be able to start Forge by typing

[source,cmd]
        forge
        
IMPORTANT: For more details about how to install Forge, follow the instructions https://github.com/forge/core/blob/master/README.asciidoc[here].
        
Once you're in Forge Shell perform a build as follows:

[source,cmd]
        build --notest clean install
        
After that, enter the *addon* module 

[source,cmd]
        cd addon
        
And finally install the addon into your Forge installation

[source,cmd]
        addon-build-and-install
        
If everything was fine, you should be able to see the following command in Forge Shell

        picketlink-setup

== Features

NOTE:When using this addon keep in mind that once your project is properly configured you are able to use whatever feature provide
by the PicketLink project. The addon provides specific commands for some of the most common tasks when working with PicketLink.
Please check http://picketlink.org[picketlink.org] for more information about its features.

Configuration of Maven Dependencies::
   This addon configures all the necessary PicketLink dependencies to your project's pom.xml. All PicketLink-related dependencies are managed
   by the PicketLink Bill Of Materials(BOM) as well their respective versions.

Swtich between different PicketLink Versions::
   This addon provides an easy way to choose a specific PicketLink version. This is useful if you want to test a specific version, including
   snapshots. By default, the latest final released version is configured.

Authentication based on HTTP Authentication Schemes ::
   This addon provides an easy way to enable authentication to your project using any of the aviable and supported 
   HTTP Authentication Scheme such as FORM, BASIC, DIGEST and CLIENT_CERT.
   
Identity Management using a Database or Filesystem Identity Stores ::
   This addon provides an easy way to enable Identity Management to your project using a Database or Filesystem to store
   your identity data such as users, roles, groups and so forth. You can choose to use the http://docs.jboss.org/picketlink/2/latest/reference/html-single/#sect-Basic_Identity_Model[PicketLink Basic Model]
   or provide your own custom Identity Model to represent your users, roles, groups or any other type of identity.

Creation of JPA Entities based on your Identity Types ::
   This addon provides useful commands to generate JPA entities based on your PicketLink Identity Types. This is specially useful
   if you have enabled Identity Management to your project using a JPA Identity Store. And also if you want to write your
   own Identity Model instead of using the default identity model provided by PicketLink.

Project Templates ::
   This addon provides useful templates to get you quickly started with PicketLink. They are a valuable source of knowledge
   and can help you to build your own project.

+
[cols="1a,2", options="header"]
|===
|Command|Description

|`picketlink-jsf-form-authentication-scaffold-generate`
|Creates a JSF-based project providing form authentication and also logout functionality. You can see from this template how to write a JSF login page
and a specific bean to perform authentication based on an username and password credential. It also demonstrates how to
use PicketLink Security Filter to enable HTTP Form Authentication if you want to use a simple HTML or JSP page.

|===

== Want to Contribute ?

Help us to improve this addon by giving us feedback or suggestions about its features. If you think a specific configuration
task or feature should be provided by this addon, please let us know.

We want to improve this addon as much as possible and provide a better experience for those looking a quick way to create a secure
infrastructure to their projects.

You can open an issue at https://issues.jboss.org/browse/PLINK[PLINK].
